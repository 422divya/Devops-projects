pipeline {
    
    agent {
        docker {
            
            image 'abhishekf5/maven-abhishek-docker-agent:v1'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
        }
    }
    
    
    stages {
        
        
        stage('pull code from github') {
            
            
            steps {
                
                git branch: 'main', url: 'https://github.com/422divya/Jenkins-Zero-To-Hero.git/java-maven-sonar-argocd-helm-k8s'
            }
        }
        
        
        stage('Building code, this stage create jar,war files') {
            steps {
                
               sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
            }
            
        }
        
        stage('Checking code using sonarqube') {
            
            environment {
                sonar-url = 'http://43.206.159.91:9000/'
            }
            
            
            steps {
                
                withCredentials([string(credentialsId: 'sonar-admin', variable: 'sonar-admin')]) {
                   sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$sonar-admin -Dsonar.host.url=$sonar-url'

                }
                
                
            }
        }
        
        
        
        stage('Build Docker image') {
            
            environment{
                dockerimage = "divya422/java-spring-boot:${BUILD_NUMBER} ."
            }
            
            steps {
                
                   sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${dockerimage} .' 
                }
            }
            
        
        
        
        stage('Push Docker java application image to registry') {
            
            steps {
                
            
        

            
                }
        }
    }
}
